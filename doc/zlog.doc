#### zlog - zlog actor

zlog - zlog actor

Please add @discuss section in ../src/zlog.c.

This is the class interface:

```h
    //  Create new zlog actor instance.
    //  @TODO: Describe the purpose of this actor!
    //
    //      zactor_t *zlog = zactor_new (zlog, NULL);
    //
    //  Destroy zlog instance.
    //
    //      zactor_destroy (&zlog);
    //
    //  Enable verbose logging of commands and activity:
    //
    //      zstr_send (zlog, "VERBOSE");
    //
    //  Start zlog actor.
    //
    //      zstr_sendx (zlog, "START", NULL);
    //
    //  Stop zlog actor.
    //
    //      zstr_sendx (zlog, "STOP", NULL);
    //
    //  This is the zlog constructor as a zactor_fn;
    ZLOG_EXPORT void
        zlog_actor (zsock_t *pipe, void *args);
    
    //  Self test of this actor
    ZLOG_EXPORT void
        zlog_test (bool verbose);
```

This is the class self test code:

```c
    //  Simple create/destroy test
    char *params1[3] = {"inproc://logger1", "logger1", "GOSSIP MASTER"};
    zactor_t *zlog = zactor_new (zlog_actor, params1);
    
    char *params2[3] = {"inproc://logger2", "logger2", "GOSSIP SLAVE"};
    zactor_t *zlog2 = zactor_new (zlog_actor, params2);
    
    if (verbose) {
        zstr_send (zlog, "VERBOSE");
        zstr_send (zlog2, "VERBOSE");
    }
    
    zstr_send (zlog, "START");
    zstr_send (zlog2, "START");
    
    //  Give time to interconnect
    zclock_sleep (250);
    
    zstr_send (zlog, "STOP");
    zstr_send (zlog2, "STOP");
    
    //  Give time to disconnect
    zclock_sleep (250);
    
    zactor_destroy (&zlog);
    zactor_destroy (&zlog2);
```

